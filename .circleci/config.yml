# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/web
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: gitcoin/web:latest
        environment:
          CACHE_URL: dbcache://my_cache_table
          DATABASE_URL: psql://postgres:postgres@localhost/testdb
          ENV: test
          COLLECTFAST_CACHE_URL: dbcache://collectfast

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:9-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - deps37-{{ .Branch }}-{{ checksum "requirements/base.txt" }}
          # fallback to using the latest cache if no exact match is found
          - deps37-{{ .Branch }}-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/test.txt

      - save_cache:
          key: deps37-{{ .Branch }}-{{ checksum "requirements/base.txt" }}
          paths:
            - ./venv
            - "/usr/local/bin"
            - "/usr/local/lib/python3.7/site-packages"

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            cd ~/web/app
            pytest -p no:ethereum
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: test-results
