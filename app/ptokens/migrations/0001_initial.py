# Generated by Django 2.2.4 on 2020-08-25 03:13

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import economy.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dashboard', '0142_auto_20200818_0807'),
    ]

    operations = [
        migrations.CreateModel(
            name='PersonalToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(db_index=True, default=economy.models.get_time)),
                ('modified_on', models.DateTimeField(default=economy.models.get_time)),
                ('token_state', models.CharField(choices=[('open', 'open'), ('progress', 'progress'), ('completed', 'completed'), ('denied', 'denied')], db_index=True, default='open', max_length=50)),
                ('network', models.CharField(db_index=True, default='', max_length=255)),
                ('web3_created', models.DateTimeField(db_index=True)),
                ('token_name', models.CharField(max_length=50)),
                ('token_symbol', models.CharField(max_length=10, null=True)),
                ('token_address', models.CharField(max_length=50)),
                ('token_owner_address', models.CharField(blank=True, max_length=255)),
                ('total_minted', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Total minted', max_digits=50, null=True)),
                ('total_available', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Total available', max_digits=50, null=True)),
                ('total_purchased', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Total purchases', max_digits=50, null=True)),
                ('total_redeemed', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Total redeemed', max_digits=50, null=True)),
                ('purchases', models.IntegerField(default=0, help_text='Number of purchases')),
                ('redemptions', models.IntegerField(default=0, help_text='Number of redemptions')),
                ('txid', models.CharField(max_length=255, unique=True)),
                ('last_block', models.IntegerField(default=0, help_text='Last block used to calculate cached properties')),
                ('holders', models.PositiveIntegerField(default=0, help_text='Total Holders')),
                ('tx_status', models.CharField(choices=[('na', 'na'), ('pending', 'pending'), ('success', 'success'), ('error', 'error'), ('unknown', 'unknown'), ('dropped', 'dropped')], db_index=True, default='na', max_length=9)),
                ('value', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=50, null=True)),
                ('cached_balances', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, null=True)),
                ('token_owner_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='token_created', to='dashboard.Profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RedemptionToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(db_index=True, default=economy.models.get_time)),
                ('modified_on', models.DateTimeField(default=economy.models.get_time)),
                ('redemption_state', models.CharField(choices=[('request', 'requested'), ('accepted', 'accepted'), ('denied', 'denied'), ('cancelled', 'canceled'), ('waiting_complete', 'waiting_complete'), ('completed', 'completed')], db_index=True, default='request', max_length=50)),
                ('network', models.CharField(default='', max_length=255)),
                ('reason', models.CharField(blank=True, max_length=1000)),
                ('total', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Total ptokens to redeem', max_digits=50, null=True)),
                ('txid', models.CharField(blank=True, max_length=255)),
                ('redemption_accepted', models.DateTimeField(null=True)),
                ('redemption_requester_address', models.CharField(blank=True, max_length=255)),
                ('tx_status', models.CharField(choices=[('na', 'na'), ('pending', 'pending'), ('success', 'success'), ('error', 'error'), ('unknown', 'unknown'), ('dropped', 'dropped')], db_index=True, default='na', max_length=9)),
                ('web3_created', models.DateTimeField(null=True)),
                ('canceller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='canceller', to='dashboard.Profile')),
                ('ptoken', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ptokens.PersonalToken')),
                ('redemption_requester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='redemptions', to='dashboard.Profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchasePToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(db_index=True, default=economy.models.get_time)),
                ('modified_on', models.DateTimeField(default=economy.models.get_time)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=50)),
                ('token_name', models.CharField(max_length=50)),
                ('token_address', models.CharField(max_length=50)),
                ('network', models.CharField(max_length=255)),
                ('txid', models.CharField(max_length=255, unique=True)),
                ('tx_status', models.CharField(choices=[('na', 'na'), ('pending', 'pending'), ('success', 'success'), ('error', 'error'), ('unknown', 'unknown'), ('dropped', 'dropped')], db_index=True, default='na', max_length=9)),
                ('web3_created', models.DateTimeField(db_index=True)),
                ('token_holder_address', models.CharField(blank=True, max_length=255)),
                ('ptoken', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ptoken_purchases', to='ptokens.PersonalToken')),
                ('token_holder_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ptoken_purchases', to='dashboard.Profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PTokenEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(db_index=True, default=economy.models.get_time)),
                ('modified_on', models.DateTimeField(default=economy.models.get_time)),
                ('event', models.CharField(choices=[('mint_ptoken', 'Mint tokens'), ('burn_ptoken', 'Burn tokens'), ('edit_price_ptoken', 'Update price token')], max_length=20)),
                ('txid', models.CharField(max_length=255, unique=True)),
                ('tx_status', models.CharField(choices=[('na', 'na'), ('pending', 'pending'), ('success', 'success'), ('error', 'error'), ('unknown', 'unknown'), ('dropped', 'dropped')], db_index=True, default='na', max_length=9)),
                ('network', models.CharField(db_index=True, default='', max_length=255)),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, null=True)),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='token_events', to='dashboard.Profile')),
                ('ptoken', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ptokens.PersonalToken')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
